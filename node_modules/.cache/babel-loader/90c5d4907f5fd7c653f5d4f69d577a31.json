{"ast":null,"code":"var _jsxFileName = \"/Users/sugitataro/uttechclub/curriculm_2_taro-sugita_/react-to-go-real/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Form from './form';\nimport React from \"react\";\n\n/*type item ={\n  users:{\n\n    id:string,\n    name:string,\n    age:number\n  }[]\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(0); //ここをletにした\n  const [users, setUsers] = useState([]); //これを加えた\n\n  /* 全然意味がなさそう\n  interface users {\n    id : string\n    name: string\n    age : number\n  }\n  */\n\n  const onSubmit = async (e, name, age) => {\n    e.preventDefault();\n    console.log(\"onSubmit: \", name, \" \", age);\n    if (!name) {\n      alert(\"Please enter name\");\n      return;\n    }\n    if (name.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n    if (age < 20 || age > 80) {\n      alert(\"Please enter age between 20 and 80\");\n      return;\n    }\n    try {\n      const result = await fetch(\"http://localhost:8000/user\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          age: age\n        })\n      });\n      const response = await fetch(\"http://localhost:8000/user\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      /*useEffect(() => {\n        // 処理\n        fetchUsers()\n      }, [value]);\n      */\n\n      if (!result.ok) {\n        throw Error(`Failed to create user: ${result.status}`);\n      }\n      fetchUsers();\n      setName(\"\");\n      setAge(0);\n\n      //todo Goのサーバーからすべてのuserをgetしuser一覧を更新する\n      //fetchUsers();\n    } catch (err) {\n      console.error(err);\n    }\n  }; //onsubmit\n\n  //users を取得\n  const fetchUsers = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/user\");\n      if (!res.ok) {\n        throw Error(`Failed to fetch users: ${res.status}`);\n      }\n      console.log(res);\n      const users = await res.json();\n      setUsers(users);\n      console.log(users);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    //todo これは起動時になるように揃える\n    fetchUsers();\n  }, []);\n\n  /*const response = await fetch(\n    \"http://localhost:8000/user\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-slogan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30E6\\u30FC\\u30B6\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          children: [item.name, \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: item.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) //todo　これをどうにかする　　　データ取得用の手軽な React フックが欲しいだけであれば、 npm install use-data-api してドキュメントに従ってください。導入するのであればスターを付けるのも忘れずに^^\n      ), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), \" //todo \\u3069\\u3046\\u306B\\u304B\\u3057\\u3066users.\\u3007\\u3007\\u306B\\u3059\\u308B\\u3053\\u3068\\u3067\\u3001\\u30A8\\u30E9\\u30FC\\u3092\\u89E3\\u6D88\\u3057\\u305F\\u3044\\u3002\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bg6EETmE60kHtHfOszV1/SkdPSc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Form","React","App","name","setName","age","setAge","users","setUsers","onSubmit","e","preventDefault","console","log","alert","length","result","fetch","method","body","JSON","stringify","response","headers","ok","Error","status","fetchUsers","err","error","res","json","map","item"],"sources":["/Users/sugitataro/uttechclub/curriculm_2_taro-sugita_/react-to-go-real/src/App.tsx"],"sourcesContent":["\n\n\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Form from './form'\nimport React from \"react\";\n\n \n\n\n\n/*type item ={\n  users:{\n\n    id:string,\n    name:string,\n    age:number\n  }[]\n}\n*/\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n // const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState<number>(0); //ここをletにした\n  const [users, setUsers] = useState([]);//これを加えた\n\n  /* 全然意味がなさそう\n  interface users {\n    id : string\n    name: string\n    age : number\n  }\n*/\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>,name:string,age:number) => {\n    e.preventDefault();\n\n\n    console.log(\"onSubmit: \", name, \" \", age);\n\n\n    if (!name) {\n      alert(\"Please enter name\");\n      return;\n    }\n\n    if (name.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n    \n    if (age < 20 || age > 80) {\n      alert(\"Please enter age between 20 and 80\");\n      return;\n    }\n\n   \n   \n    \n\n    try {\n      const result = await fetch(\"http://localhost:8000/user\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          age: age,\n        }),\n\n      });\n    \n      const response = await fetch(\n        \"http://localhost:8000/user\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    \n\n      /*useEffect(() => {\n        // 処理\n        fetchUsers()\n      }, [value]);\n      */\n\n      if (!result.ok) {\n        throw Error(`Failed to create user: ${result.status}`);\n      }\n\n     \n\n\n      fetchUsers();\n      setName(\"\");\n      setAge(0);\n\n      //todo Goのサーバーからすべてのuserをgetしuser一覧を更新する\n      //fetchUsers();\n    } catch (err) {\n       console.error(err);\n    }\n   \n}; //onsubmit\n\n//users を取得\nconst fetchUsers = async () => {\n  try {\n    const res = await fetch(\"http://localhost:8000/user\");\n    if (!res.ok) {\n      throw Error(`Failed to fetch users: ${res.status}`);\n    }\n    console.log (res)\n\n    const users = await res.json();\n    setUsers(users);\n    console.log(users)\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n\nuseEffect(() => {\n  //todo これは起動時になるように揃える\n  fetchUsers()\n}, [])\n\n\n\n\n/*const response = await fetch(\n  \"http://localhost:8000/user\",\n  {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }\n);\n*/\n\n\n  \n\n\n\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className= \"header-slogan\"></div>\n        <h1>User Register</h1>\n    \n      </header>\n        <Form onSubmit={onSubmit}/>\n       \n      <div>\n      <h2>ユーザ一覧</h2>\n        {users.map((item: {\n           name: string | undefined; \n           age : number | undefined;\n\n        }) =>(\n          <li>\n            <a>{item.name},</a>\n            <a>{item.age}</a>\n          </li>  //todo　これをどうにかする　　　データ取得用の手軽な React フックが欲しいだけであれば、 npm install use-data-api してドキュメントに従ってください。導入するのであればスターを付けるのも忘れずに^^\n\n\n        ))}\n      <div></div> //todo どうにかしてusers.〇〇にすることで、エラーを解消したい。\n      </div>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}