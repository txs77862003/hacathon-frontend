{"ast":null,"code":"/*\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Form from './form'\nimport React from \"react\";\nfunction App() {\n  const [name, setName] = useState(\"\");\n // const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState<number>(0); //ここをletにした\n  \n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>,name:string,age:number) => {\n    e.preventDefault();\n\n\n    console.log(\"onSubmit: \", name, \" \", age);\n\n\n    if (!name) {\n      alert(\"Please enter name\");\n      return;\n    }\n\n    if (name.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n    \n    if (age < 20 || age > 80) {\n      alert(\"Please enter age between 20 and 80\");\n      return;\n    }\n\n    try {\n      const result = await fetch(\"http://localhost:8000/user\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          age: age,\n        }),\n      });\n      if (!result.ok) {\n        throw Error(`Failed to create user: ${result.status}`);\n      }\n\n      setName(\"\");\n      setAge(0);\n      //todo Goのサーバーからすべてのuserをgetしuser一覧を更新する\n      //fetchUsers();\n    } catch (err) {\n      console.error(err);\n    }\n  }; \n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className= \"header-slogan\"></div>\n        <h1>User Register</h1>\n    \n      </header>\n        <Form onSubmit={onSubmit}/>\n       \n\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n*/","map":{"version":3,"names":[],"sources":["/Users/sugitataro/uttechclub/curriculm_2_taro-sugita_/react-to-go-real/src/App.tsx"],"sourcesContent":["/*\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Form from './form'\nimport React from \"react\";\nfunction App() {\n  const [name, setName] = useState(\"\");\n // const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState<number>(0); //ここをletにした\n  \n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>,name:string,age:number) => {\n    e.preventDefault();\n\n\n    console.log(\"onSubmit: \", name, \" \", age);\n\n\n    if (!name) {\n      alert(\"Please enter name\");\n      return;\n    }\n\n    if (name.length > 50) {\n      alert(\"Please enter a name shorter than 50 characters\");\n      return;\n    }\n    \n    if (age < 20 || age > 80) {\n      alert(\"Please enter age between 20 and 80\");\n      return;\n    }\n\n    try {\n      const result = await fetch(\"http://localhost:8000/user\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          age: age,\n        }),\n      });\n      if (!result.ok) {\n        throw Error(`Failed to create user: ${result.status}`);\n      }\n\n      setName(\"\");\n      setAge(0);\n      //todo Goのサーバーからすべてのuserをgetしuser一覧を更新する\n      //fetchUsers();\n    } catch (err) {\n      console.error(err);\n    }\n  }; \n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className= \"header-slogan\"></div>\n        <h1>User Register</h1>\n    \n      </header>\n        <Form onSubmit={onSubmit}/>\n       \n\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}